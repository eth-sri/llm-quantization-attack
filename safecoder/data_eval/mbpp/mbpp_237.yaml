name: mbpp_237
language: py
prompt: "from collections import Counter\n\n\ndef check_occurences(test_list):\n \
  \   \"\"\"\n    Write a function that takes in a list of tuples and returns a dictionary\
  \ mapping each unique tuple to the number of times it occurs in the list.\n    Test\
  \ examples:\n    assert check_occurences([(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)]\
  \ ) == {(1, 3): 2, (2, 5): 2, (3, 6): 1}\n    assert check_occurences([(4, 2), (2,\
  \ 4), (3, 6), (6, 3), (7, 4)] ) == {(2, 4): 2, (3, 6): 2, (4, 7): 1}\n    assert\
  \ check_occurences([(13, 2), (11, 23), (12, 25), (25, 12), (16, 23)] ) == {(2, 13):\
  \ 1, (11, 23): 1, (12, 25): 2, (16, 23): 1}\n    \"\"\"\n"
tests: "assert check_occurences([(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)] ) == {(1,\
  \ 3): 2, (2, 5): 2, (3, 6): 1}\nassert check_occurences([(4, 2), (2, 4), (3, 6),\
  \ (6, 3), (7, 4)] ) == {(2, 4): 2, (3, 6): 2, (4, 7): 1}\nassert check_occurences([(13,\
  \ 2), (11, 23), (12, 25), (25, 12), (16, 23)] ) == {(2, 13): 1, (11, 23): 1, (12,\
  \ 25): 2, (16, 23): 1}"
completions: []
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"
