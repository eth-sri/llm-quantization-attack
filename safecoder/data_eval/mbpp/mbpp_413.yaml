name: mbpp_413
language: py
prompt: "def extract_nth_element(list1, n):\n    \"\"\"\n    Write a function to extract\
  \ the nth element from a given list of tuples.\n    Test examples:\n    assert extract_nth_element([('Greyson\
  \ Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull',\
  \ 94, 98)] ,0)==['Greyson Fulton', 'Brady Kent', 'Wyatt Knott', 'Beau Turnbull']\n\
  \    assert extract_nth_element([('Greyson Fulton', 98, 99), ('Brady Kent', 97,\
  \ 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,2)==[99, 96, 94, 98]\n\
  \    assert extract_nth_element([('Greyson Fulton', 98, 99), ('Brady Kent', 97,\
  \ 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)],1)==[98, 97, 91, 94]\n\
  \    \"\"\"\n"
tests: "assert extract_nth_element([('Greyson Fulton', 98, 99), ('Brady Kent', 97,\
  \ 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,0)==['Greyson Fulton',\
  \ 'Brady Kent', 'Wyatt Knott', 'Beau Turnbull']\nassert extract_nth_element([('Greyson\
  \ Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull',\
  \ 94, 98)] ,2)==[99, 96, 94, 98]\nassert extract_nth_element([('Greyson Fulton',\
  \ 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94,\
  \ 98)],1)==[98, 97, 91, 94]"
completions: []
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"
