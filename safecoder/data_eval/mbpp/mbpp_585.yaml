name: mbpp_585
language: py
prompt: "import heapq\n\n\ndef expensive_items(items, n):\n    \"\"\"\n    Write a\
  \ function to find the n most expensive items in a given dataset.\n    Test examples:\n\
  \    assert expensive_items([{'name': 'Item-1', 'price': 101.1},{'name': 'Item-2',\
  \ 'price': 555.22}],1)==[{'name': 'Item-2', 'price': 555.22}]\n    assert expensive_items([{'name':\
  \ 'Item-1', 'price': 101.1},{'name': 'Item-2', 'price': 555.22}, {'name': 'Item-3',\
  \ 'price': 45.09}],2)==[{'name': 'Item-2', 'price': 555.22},{'name': 'Item-1', 'price':\
  \ 101.1}]\n    assert expensive_items([{'name': 'Item-1', 'price': 101.1},{'name':\
  \ 'Item-2', 'price': 555.22}, {'name': 'Item-3', 'price': 45.09},{'name': 'Item-4',\
  \ 'price': 22.75}],1)==[{'name': 'Item-2', 'price': 555.22}]\n    \"\"\"\n"
tests: "assert expensive_items([{'name': 'Item-1', 'price': 101.1},{'name': 'Item-2',\
  \ 'price': 555.22}],1)==[{'name': 'Item-2', 'price': 555.22}]\nassert expensive_items([{'name':\
  \ 'Item-1', 'price': 101.1},{'name': 'Item-2', 'price': 555.22}, {'name': 'Item-3',\
  \ 'price': 45.09}],2)==[{'name': 'Item-2', 'price': 555.22},{'name': 'Item-1', 'price':\
  \ 101.1}]\nassert expensive_items([{'name': 'Item-1', 'price': 101.1},{'name': 'Item-2',\
  \ 'price': 555.22}, {'name': 'Item-3', 'price': 45.09},{'name': 'Item-4', 'price':\
  \ 22.75}],1)==[{'name': 'Item-2', 'price': 555.22}]"
completions: []
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"
