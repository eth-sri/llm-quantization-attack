name: mbpp_262
language: py
prompt: "def split_two_parts(list1, L):\n    \"\"\"\n    Write a function that takes\
  \ in a list and an integer L and splits the given list into two parts where the\
  \ length of the first part of the list is L, and returns the resulting lists in\
  \ a tuple.\n    Test examples:\n    assert split_two_parts([1,1,2,3,4,4,5,1],3)==([1,\
  \ 1, 2], [3, 4, 4, 5, 1])\n    assert split_two_parts(['a', 'b', 'c', 'd'],2)==(['a',\
  \ 'b'], ['c', 'd'])\n    assert split_two_parts(['p', 'y', 't', 'h', 'o', 'n'],4)==(['p',\
  \ 'y', 't', 'h'], ['o', 'n'])\n    \"\"\"\n"
tests: "assert split_two_parts([1,1,2,3,4,4,5,1],3)==([1, 1, 2], [3, 4, 4, 5, 1])\n\
  assert split_two_parts(['a', 'b', 'c', 'd'],2)==(['a', 'b'], ['c', 'd'])\nassert\
  \ split_two_parts(['p', 'y', 't', 'h', 'o', 'n'],4)==(['p', 'y', 't', 'h'], ['o',\
  \ 'n'])"
completions: []
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"
