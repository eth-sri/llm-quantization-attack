name: mbpp_64
language: py
prompt: "def subject_marks(subjectmarks):\n    \"\"\"\n    Write a function to sort\
  \ a list of tuples using the second value of each tuple.\n    Test examples:\n \
  \   assert subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social\
  \ sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90),\
  \ ('Maths', 97)]\n    assert subject_marks([('Telugu',49),('Hindhi',54),('Social',33)])==([('Social',33),('Telugu',49),('Hindhi',54)])\n\
  \    assert subject_marks([('Physics',96),('Chemistry',97),('Biology',45)])==([('Biology',45),('Physics',96),('Chemistry',97)])\n\
  \    \"\"\"\n"
tests: "assert subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social\
  \ sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90),\
  \ ('Maths', 97)]\nassert subject_marks([('Telugu',49),('Hindhi',54),('Social',33)])==([('Social',33),('Telugu',49),('Hindhi',54)])\n\
  assert subject_marks([('Physics',96),('Chemistry',97),('Biology',45)])==([('Biology',45),('Physics',96),('Chemistry',97)])"
completions: []
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"
